$standardRadius: 5px;
$standardBorder: 1px solid black;

*{
    color:black;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

html,body{
    background-color: $bodyPrimaryBackground;
}

.noselect{
    @include user-select(none);
}

.radius-standard{
    @include border-radius($standardRadius);
}

.text-{
    &center{
        text-align: center;
    }
    &left{
        text-align: left;
    }
    &right{
        text-align: right;
    }
    &white{
        color: white;
    }
    &black{
        color: black;
    }
}

.float-{
    &left{
        float:left;
    }
    &right{
        float:right;
    }
}

.text-small{
    font-size: x-small;
}

h1{
    font-size: 2em;
}
h2{
    font-size: 1.5em;
}
h3{
    font-size: 1.2em;
}
h4{
    font-size: 1em;
}
h5{
    font-size: 0.83em;
}
h6{
    font-size: 0.67em;
}

header nav{
    ul,
    ol{
        list-style-type: none;
    }
}

.container{
    width: 100%;   
}

footer{
    position: absolute;
    left:0;
    right:0;
    background-color: $footerPrimaryBackground;
}

.row{
    width: 100%;
    display: block;
}

.card,
.accordion{
    @extend .radius-standard;
    margin: 5px;
    background-color: $cardPrimaryBackground;
    border: $standardBorder;
    border-color: rgb(0,0,0,0.6);

    .header{
        @include border-top-left-radius($standardRadius);
        @include border-top-right-radius($standardRadius);
        border: $standardBorder;
        border-color: rgb(0,0,0,0.6);
        border-left: none;
        border-right: none;
        border-top: none;
        background-color: $cardHeaderBackground;
        font-size: 18px;
        padding: 5px;
    }

    .body{
        padding: 5px;
    }
}

.accordion {
    @include transition(all 0.4s ease);
    .header{
        @include border-radius(0);
        @extend .noselect;
        cursor: pointer;
        border-bottom: 1px solid rgb(0,0,0,0.6);
        border-top: 1px solid rgb(0,0,0,0.6);
    }

    .accordion-tab:first-child .header{
        border-top: none;
    }

    .closed {
        .header{
            border-bottom: none;
        }

        .body{
            display:none;
        }
    }
    .open .body{
        display:block;
    }
}

@each $key, $value in $themeColors {
    $oppositeColor: map-get($oppositeColors, $key);

    .#{$key} {
        color: $value;
    }

    .bg-#{$key} {
        background-color: $value;
    }

    .fg-#{$key} {
        color: $value;
    }

    a,
    button,
    input[type=submit]{
        &.#{$key} {
            @extend .radius-standard;
            @extend .noselect;
            text-decoration: none;
            display: inline-block;
            line-height: normal;
            box-sizing: border-box;
            background-color: $value;
            color: $oppositeColor;
            border: none transparent;
            padding: .5em 1em !important;
            font-size: 100%;
            white-space: nowrap;
            cursor: pointer;
            text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
        }
    }
}

@for $i from 1 through 10 {
    $scaleUp: 1 + ($i / 10);
    $scaleDown: 1 - ($i / 10);
    a,
    button,
    input[type=submit],
    span{
        &.scale-up-#{$i}{
            @include transform(scale($scaleUp));
            display:inline-block;
        }
        &.scale-down-#{$i}{
            @include transform(scale($scaleDown));
            display:inline-block;
        }
        &.scale-up-#{$i}-hover:hover{
            @include transform(scale($scaleUp));
            display:inline-block;
        }
        &.scale-down-#{$i}-hover:hover{
            @include transform(scale($scaleDown));
            display:inline-block;
        }
    }
    
    p{
        &.scale-up-#{$i}{
            @include transform(scale($scaleUp));
            display:block;
        }
        &.scale-down-#{$i}{
            @include transform(scale($scaleDown));
            display:block;
        }
        &.scale-up-#{$i}-hover:hover{
            @include transform(scale($scaleUp));
            display:block;
        }
        &.scale-down-#{$i}-hover:hover{
            @include transform(scale($scaleDown));
            display:block;
        }
    }
}